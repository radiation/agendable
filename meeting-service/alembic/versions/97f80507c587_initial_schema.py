"""Initial schema

Revision ID: 97f80507c587
Revises:
Create Date: 2025-01-19 14:12:10.298326

"""
from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "97f80507c587"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "recurrences",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=100), nullable=True),
        sa.Column("rrule", sa.String(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_recurrence_created_at", "recurrences", ["created_at"], unique=False
    )
    op.create_index("ix_recurrence_rrule", "recurrences", ["rrule"], unique=False)
    op.create_table(
        "tasks",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("assignee_id", sa.Integer(), nullable=True),
        sa.Column("title", sa.String(length=100), nullable=True),
        sa.Column("description", sa.String(length=1000), nullable=True),
        sa.Column("due_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("completed", sa.Boolean(), nullable=True),
        sa.Column("completed_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_task_assignee_id", "tasks", ["assignee_id"], unique=False)
    op.create_index("ix_task_completed", "tasks", ["completed"], unique=False)
    op.create_index("ix_task_due_date", "tasks", ["due_date"], unique=False)
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("first_name", sa.String(), nullable=True),
        sa.Column("last_name", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "meetings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("recurrence_id", sa.Integer(), nullable=True),
        sa.Column("title", sa.String(length=100), nullable=True),
        sa.Column("start_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("end_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("duration", sa.Integer(), nullable=True),
        sa.Column("location", sa.String(length=100), nullable=True),
        sa.Column("notes", sa.String(), nullable=True),
        sa.Column("num_reschedules", sa.Integer(), nullable=True),
        sa.Column("reminder_sent", sa.Boolean(), nullable=True),
        sa.Column("completed", sa.Boolean(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["recurrence_id"],
            ["recurrences.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_meeting_completed", "meetings", ["completed"], unique=False)
    op.create_index("ix_meeting_start_date", "meetings", ["start_date"], unique=False)
    op.create_index("ix_recurrence_id", "meetings", ["recurrence_id"], unique=False)
    op.create_table(
        "meeting_tasks",
        sa.Column("meeting_id", sa.Integer(), nullable=False),
        sa.Column("task_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(["meeting_id"], ["meetings.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["task_id"], ["tasks.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("meeting_id", "task_id"),
    )
    op.create_table(
        "meeting_users",
        sa.Column("meeting_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(["meeting_id"], ["meetings.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("meeting_id", "user_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("meeting_users")
    op.drop_table("meeting_tasks")
    op.drop_index("ix_recurrence_id", table_name="meetings")
    op.drop_index("ix_meeting_start_date", table_name="meetings")
    op.drop_index("ix_meeting_completed", table_name="meetings")
    op.drop_table("meetings")
    op.drop_table("users")
    op.drop_index("ix_task_due_date", table_name="tasks")
    op.drop_index("ix_task_completed", table_name="tasks")
    op.drop_index("ix_task_assignee_id", table_name="tasks")
    op.drop_table("tasks")
    op.drop_index("ix_recurrence_rrule", table_name="recurrences")
    op.drop_index("ix_recurrence_created_at", table_name="recurrences")
    op.drop_table("recurrences")
    # ### end Alembic commands ###
